/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */

package forms.korisnik;

import domain.Pivo;
import domain.Pivara;
import java.util.ArrayList;
import java.util.List;
import models.TableModelPretraga;
import service.KorisnikService;

import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import javax.swing.SwingUtilities;
/**
 *
 * @author milos
 */
public class PanelPretraga extends javax.swing.JPanel {
    private TableModelPretraga tableModelPretraga;
    private KorisnikService korisnikService;
    
    /** Creates new form PanelPretraga */
    public PanelPretraga() {
        initComponents();
        korisnikService = KorisnikService.getInstance();
        inicijalizujFormu();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTxtFieldSearchBox = new javax.swing.JTextField();
        jButtonPretrazi = new javax.swing.JButton();
        jButtonPrikaziOmiljenaPiva = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTablePretraga = new javax.swing.JTable();

        jButtonPretrazi.setText("Pretrazi");

        jButtonPrikaziOmiljenaPiva.setText("Prikazi Omiljena Piva");

        jTablePretraga.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane2.setViewportView(jTablePretraga);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jTxtFieldSearchBox, javax.swing.GroupLayout.PREFERRED_SIZE, 290, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButtonPretrazi, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jButtonPrikaziOmiljenaPiva))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTxtFieldSearchBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonPretrazi))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButtonPrikaziOmiljenaPiva)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 201, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(26, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void osveziTabeluSaPretragom(String filter) {
        List<Object> rezultat = new ArrayList<>();

        // Pretraga pivara
        for (Pivara pivara : korisnikService.getSvePivare()) {
            if (pivara.getNaziv().toLowerCase().contains(filter.toLowerCase())) {
                rezultat.add(pivara);
            }
        }

        // Pretraga piva
        for (Pivo pivo : korisnikService.getSvaPiva()) {
            if (pivo.getNaziv().toLowerCase().contains(filter.toLowerCase())) {
                rezultat.add(pivo);
            }
        }

        postaviModelTabele(rezultat);
    }

    private void prikaziOmiljenaPiva() {
        try {
            korisnikService.ucitajOmiljenaPiva(); // osvežava listu omiljenih
        } catch (Exception ex) {
            ex.printStackTrace();
            // Možeš prikazati poruku o grešci korisniku ako želiš
        }

        List<Object> omiljenaPivaLista = new ArrayList<>();
        for (domain.OmiljenoPivo op : korisnikService.getOmiljenaPiva()) {
            // Nađi Pivo objekat koji odgovara ovom OmiljenoPivo
            for (Pivo pivo : korisnikService.getSvaPiva()) {
                if (pivo.getPivoID().equals(op.getPivoID())) {
                    omiljenaPivaLista.add(pivo);
                    break;
                }
            }
        }

        postaviModelTabele(omiljenaPivaLista); 
    }
    
    private void inicijalizujFormu() {
        addMouseEventListener();
        jButtonPretrazi.addActionListener(e -> osveziTabeluSaPretragom(jTxtFieldSearchBox.getText().trim()));
        jButtonPrikaziOmiljenaPiva.addActionListener(e -> prikaziOmiljenaPiva());
    }
    
    private void postaviModelTabele(List<Object> podaci) {
        tableModelPretraga = new TableModelPretraga(podaci);
        jTablePretraga.setModel(tableModelPretraga);
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonPretrazi;
    private javax.swing.JButton jButtonPrikaziOmiljenaPiva;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTablePretraga;
    private javax.swing.JTextField jTxtFieldSearchBox;
    // End of variables declaration//GEN-END:variables

    private void addMouseEventListener() {
        jTablePretraga.addMouseListener(new MouseAdapter() {
            @Override
            public void mouseClicked(MouseEvent e) {
                if (e.getClickCount() == 2 && SwingUtilities.isLeftMouseButton(e)) {
                    int selectedRow = jTablePretraga.getSelectedRow();
                    if (selectedRow != -1) {
                        Object selected = tableModelPretraga.getObjectAt(selectedRow);
                        if (selected instanceof Pivo) {
                            korisnikService.setSelektovanoPivo((Pivo) selected);
                            korisnikService.setSelektovanaPivara(((Pivo) selected).getPivara());
                        } else if (selected instanceof Pivara) {
                            korisnikService.setSelektovanaPivara((Pivara) selected);
                            // Takođe možeš podesiti prvo pivo iz te pivare, ako postoji
                            var piva = korisnikService.getPivaZaPivaru((Pivara) selected);
                            if (!piva.isEmpty()) {
                                korisnikService.setSelektovanoPivo(piva.get(0));
                            }
                        }

                        PanelRecenzije panelRecenzije = service.KorisnikService.getInstance().getPanelRecenzije();
                        panelRecenzije.postaviSelektovaniObjekat();
                        service.KorisnikService.getInstance().getMainForm().prikaziPanel(panelRecenzije);
                    }
                }
            }
        });
    }
}
