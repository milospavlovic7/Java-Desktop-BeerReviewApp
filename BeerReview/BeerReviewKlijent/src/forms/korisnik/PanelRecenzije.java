/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package forms.korisnik;
import domain.Korisnik;
import domain.Pivara;
import domain.Pivo;
import domain.Recenzija;
import java.util.ArrayList;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import models.TableModelRecenzije;
import service.KorisnikService;

/**
 *
 * @author milos
 */
public class PanelRecenzije extends javax.swing.JPanel {
    private TableModelRecenzije tableModelRecenzije;
  
    
    /**
     * Creates new form PanelRecenzije
     */
    public PanelRecenzije() {
        initComponents();
        inicijalizacija();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel4 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jComboBoxPivara = new javax.swing.JComboBox<>();
        jComboBoxPivo = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();
        jLabelNazivPiva = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabelCenaPiva = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabelOpisPiva = new javax.swing.JLabel();
        jButtonDodajUOmiljeno = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        jLabelOcenaPiva = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTableZaposleniNaPoslu = new javax.swing.JTable();
        jLabel10 = new javax.swing.JLabel();
        jLabelOcenaKorisnikaPlaceholder = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabelImeKorisnikaPlaceholder = new javax.swing.JLabel();
        jLabelRecenzijaKorisnikaPlaceholder = new javax.swing.JLabel();
        jButtonDodajRecenziju = new javax.swing.JButton();
        jButtonUkloniRecenziju = new javax.swing.JButton();

        jLabel4.setText("jLabel4");

        jLabel2.setText("Pivara: ");

        jLabel3.setText("Pivo: ");

        jComboBoxPivara.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jComboBoxPivo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jLabel1.setText("Naziv Piva: ");

        jLabelNazivPiva.setText("Naziv Piva");

        jLabel5.setText("Cena Piva: ");

        jLabelCenaPiva.setText("Cena Piva");

        jLabel6.setText("Opis Piva: ");

        jLabelOpisPiva.setText("Opis Piva");
        jLabelOpisPiva.setVerticalAlignment(javax.swing.SwingConstants.TOP);
        jLabelOpisPiva.setVerticalTextPosition(javax.swing.SwingConstants.TOP);

        jButtonDodajUOmiljeno.setText("Dodaj u omiljeno");
        jButtonDodajUOmiljeno.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonDodajUOmiljenoActionPerformed(evt);
            }
        });

        jLabel7.setText("Prosecna ocena: ");

        jLabelOcenaPiva.setText("0");

        jLabel9.setText("Recenzije: ");

        jTableZaposleniNaPoslu.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane2.setViewportView(jTableZaposleniNaPoslu);

        jLabel10.setText("Korisnik: ");

        jLabelOcenaKorisnikaPlaceholder.setText("Ocena Korisnika");

        jLabel11.setText("Ocena: ");

        jLabelImeKorisnikaPlaceholder.setText("Ime Korisnika");

        jLabelRecenzijaKorisnikaPlaceholder.setText("Recenzija korisnika...");
        jLabelRecenzijaKorisnikaPlaceholder.setVerticalAlignment(javax.swing.SwingConstants.TOP);

        jButtonDodajRecenziju.setText("Dodaj Recenziju");
        jButtonDodajRecenziju.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonDodajRecenzijuActionPerformed(evt);
            }
        });

        jButtonUkloniRecenziju.setText("Ukloni Recenziju");
        jButtonUkloniRecenziju.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonUkloniRecenzijuActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabelRecenzijaKorisnikaPlaceholder, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel11)
                            .addComponent(jLabel10))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabelOcenaKorisnikaPlaceholder)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabelImeKorisnikaPlaceholder)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jButtonUkloniRecenziju)
                                .addGap(47, 47, 47))))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabel2)
                                        .addComponent(jLabel3))
                                    .addGap(38, 38, 38)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jComboBoxPivo, javax.swing.GroupLayout.PREFERRED_SIZE, 279, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jComboBoxPivara, javax.swing.GroupLayout.PREFERRED_SIZE, 279, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabel1)
                                        .addComponent(jLabel5)
                                        .addComponent(jLabel6))
                                    .addGap(24, 24, 24)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabelOpisPiva, javax.swing.GroupLayout.PREFERRED_SIZE, 277, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(jLabelNazivPiva, javax.swing.GroupLayout.DEFAULT_SIZE, 277, Short.MAX_VALUE)
                                            .addComponent(jLabelCenaPiva, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))))
                        .addGap(0, 13, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel7)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabelOcenaPiva, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButtonDodajUOmiljeno, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButtonDodajRecenziju, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(39, 39, 39))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jComboBoxPivara, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jComboBoxPivo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabelNazivPiva))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(jLabelCenaPiva))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel6)
                    .addComponent(jLabelOpisPiva, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(3, 3, 3)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(jLabelOcenaPiva)
                    .addComponent(jButtonDodajUOmiljeno))
                .addGap(15, 15, 15)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(jButtonDodajRecenziju))
                .addGap(9, 9, 9)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(jLabelImeKorisnikaPlaceholder)
                    .addComponent(jButtonUkloniRecenziju))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11)
                    .addComponent(jLabelOcenaKorisnikaPlaceholder))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabelRecenzijaKorisnikaPlaceholder, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(18, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonDodajRecenzijuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonDodajRecenzijuActionPerformed
        java.awt.Window parent = javax.swing.SwingUtilities.getWindowAncestor(this);
        
        Pivo pivo = KorisnikService.getInstance().getSelektovanoPivo();
        if (pivo == null) {
            javax.swing.JOptionPane.showMessageDialog(this, "Nije selektovano nijedno pivo.");
            return;
        }

        if (parent instanceof java.awt.Frame) {
            DodajRecenzijuForm dialog = new DodajRecenzijuForm((java.awt.Frame) parent, true);
            dialog.setLocationRelativeTo(this); // centriranje u odnosu na trenutni prozor
            dialog.setVisible(true); // prikaži dijalog
        } else {
            System.out.println("Parent nije Frame");
        }
    }//GEN-LAST:event_jButtonDodajRecenzijuActionPerformed

    private void jButtonDodajUOmiljenoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonDodajUOmiljenoActionPerformed
        Pivo pivo = KorisnikService.getInstance().getSelektovanoPivo();
        if (pivo == null) {
            javax.swing.JOptionPane.showMessageDialog(this, "Nije selektovano nijedno pivo.");
            return;
        }

        try {
            if (KorisnikService.getInstance().jePivoOmiljeno(pivo)) {
                KorisnikService.getInstance().ukloniIzOmiljenih(pivo);
                jButtonDodajUOmiljeno.setText("Dodaj u omiljene");
            } else {
                KorisnikService.getInstance().dodajUOmiljena(pivo);
                jButtonDodajUOmiljeno.setText("Ukloni iz omiljenih");
            }
        } catch (Exception ex) {
            ex.printStackTrace();
            javax.swing.JOptionPane.showMessageDialog(this, "Greška pri dodavanju/uklanjanju iz omiljenih.");
        }
    }//GEN-LAST:event_jButtonDodajUOmiljenoActionPerformed

    private void jButtonUkloniRecenzijuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonUkloniRecenzijuActionPerformed
        // Brisanje piva
            int confirm = javax.swing.JOptionPane.showConfirmDialog(
                this,
                "Da li ste sigurni da želite da obrišete ovu recenziju?",
                "Potvrda brisanja",
                javax.swing.JOptionPane.YES_NO_OPTION
            );

            if (confirm == javax.swing.JOptionPane.YES_OPTION) {
                try {
                    Recenzija selektovana = service.KorisnikService.getInstance().getSelektovanaRecenzija();
                    service.KorisnikService.getInstance().deleteRecenzija(selektovana);
                    javax.swing.JOptionPane.showMessageDialog(this, "Recenzija je uspešno obrisana.");
                    prikaziDetaljePiva(service.KorisnikService.getInstance().getSelektovanoPivo());
                } catch (Exception ex) {
                    javax.swing.JOptionPane.showMessageDialog(this, "Greška pri brisanju piva: " + ex.getMessage());
                }
            }
    }//GEN-LAST:event_jButtonUkloniRecenzijuActionPerformed

    //Inicijalizacija
    public void inicijalizacija(){
        inicijalizujComboBoxeve();
        inicijalizujTabelu();
        dodajListenerZaTabelu();
        jButtonUkloniRecenziju.setVisible(false);
    }
    
    private void inicijalizujComboBoxeve() {
        popuniComboBoxPivara();
        addComboBoxActionListeners();
    }

    private void inicijalizujTabelu() {
        tableModelRecenzije = new TableModelRecenzije(
            KorisnikService.getInstance().getRecenzijeZaSelektovanoPivo()
        );
        jTableZaposleniNaPoslu.setModel(tableModelRecenzije);
    }

    private void addComboBoxActionListeners() {
        jComboBoxPivara.addActionListener(evt -> prikaziPivaZaPivaru());
        jComboBoxPivo.addActionListener(evt -> onPivoSelektovano());
    }

    private void dodajListenerZaTabelu() {
        jTableZaposleniNaPoslu.getSelectionModel().addListSelectionListener(e -> prikaziDetaljeRecenzije());
    }
    
    //Popunjavanje i prikaz pivara i piva
    private void popuniComboBoxPivara() {
        jComboBoxPivara.removeAllItems();
        for (Pivara pivara : KorisnikService.getInstance().getSvePivare()) {
            jComboBoxPivara.addItem(pivara.getNaziv());
        }

        if (jComboBoxPivara.getItemCount() > 0) {
            jComboBoxPivara.setSelectedIndex(0);
            prikaziPivaZaPivaru();
        }
    }

    private void prikaziPivaZaPivaru() {
        String nazivPivare = (String) jComboBoxPivara.getSelectedItem();
        Pivara selektovana = getPivaraByNaziv(nazivPivare);
        if (selektovana == null) return;

        KorisnikService.getInstance().setSelektovanaPivara(selektovana);
        ArrayList<Pivo> piva = KorisnikService.getInstance().getPivaZaPivaru(selektovana);

        jComboBoxPivo.removeAllItems();
        if (piva.isEmpty()) {
            resetujUIZaNepostojecaPiva();
        } else {
            for (Pivo pivo : piva) {
                jComboBoxPivo.addItem(pivo.getNaziv());
            }
            jComboBoxPivo.setSelectedIndex(0);
            prikaziDetaljePiva(piva.get(0));
        }
    }

    private void onPivoSelektovano() {
        String naziv = (String) jComboBoxPivo.getSelectedItem();
        Pivara selektovanaPivara = KorisnikService.getInstance().getSelektovanaPivara();
        for (Pivo p : KorisnikService.getInstance().getPivaZaPivaru(selektovanaPivara)) {
            if (p.getNaziv().equals(naziv)) {
                prikaziDetaljePiva(p);
                break;
            }
        }
    }
    
    //Prikaz detalja piva i recenzija
    public void prikaziDetaljePiva(Pivo pivo) {
        KorisnikService.getInstance().setSelektovanoPivo(pivo);

        jLabelNazivPiva.setText(pivo.getNaziv());
        jLabelCenaPiva.setText(pivo.getCena() + " RSD");
        jLabelOpisPiva.setText(pivo.getOpis());
        jLabelOcenaPiva.setText(KorisnikService.getInstance().getProsecnaOcenaZaSelektovanoPivo());

        boolean jeOmiljeno = KorisnikService.getInstance().jePivoOmiljeno(pivo);
        jButtonDodajUOmiljeno.setText(jeOmiljeno ? "Ukloni iz omiljenih" : "Dodaj u omiljene");

        tableModelRecenzije = new TableModelRecenzije(
            KorisnikService.getInstance().getRecenzijeZaSelektovanoPivo()
        );
        jTableZaposleniNaPoslu.setModel(tableModelRecenzije);

        resetujDetaljeRecenzije();
    }

    private void prikaziDetaljeRecenzije() {
        int row = jTableZaposleniNaPoslu.getSelectedRow();
        if (row >= 0) {
            Recenzija r = tableModelRecenzije.getRecenzijaAt(row);
            KorisnikService.getInstance().setSelektovanaRecenzija(r);

            Korisnik korisnik = getKorisnikById(r.getKorisnikID());
            jLabelImeKorisnikaPlaceholder.setText(korisnik != null
                ? korisnik.getIme() + " " + korisnik.getPrezime()
                : "Nepoznat");

            jLabelOcenaKorisnikaPlaceholder.setText(String.valueOf(r.getOcena()));
            jLabelRecenzijaKorisnikaPlaceholder.setText(r.getSadrzaj());

            Korisnik ulogovani = KorisnikService.getInstance().getUlogovaniKorisnik();
            boolean korisnikJeAutor = ulogovani != null && r.getKorisnikID().equals(ulogovani.getKorisnikID());
            jButtonUkloniRecenziju.setVisible(korisnikJeAutor);
        } else {
            jButtonUkloniRecenziju.setVisible(false); // ako nije ništa selektovano
        }
    }

    private void resetujDetaljeRecenzije() {
        jLabelImeKorisnikaPlaceholder.setText("-");
        jLabelOcenaKorisnikaPlaceholder.setText("-");
        jLabelRecenzijaKorisnikaPlaceholder.setText("-");
        jButtonUkloniRecenziju.setVisible(false); // <--- dodato
    }

    //Ostalo
    private void resetujUIZaNepostojecaPiva() {
        jComboBoxPivo.addItem("/");
        jComboBoxPivo.setSelectedIndex(0);
        jLabelNazivPiva.setText("/");
        jLabelCenaPiva.setText("/");
        jLabelOpisPiva.setText("/");
        jLabelOcenaPiva.setText("/");
        jButtonDodajUOmiljeno.setText("Nema piva");
        KorisnikService.getInstance().setSelektovanoPivo(null);

        tableModelRecenzije = new TableModelRecenzije(new ArrayList<>());
        jTableZaposleniNaPoslu.setModel(tableModelRecenzije);

        resetujDetaljeRecenzije();
    }

    private Korisnik getKorisnikById(Long id) {
        for (Korisnik k : KorisnikService.getInstance().getSviKorisnici()) {
            if (k.getKorisnikID().equals(id)) return k;
        }
        return null;
    }

    private Pivara getPivaraByNaziv(String naziv) {
        for (Pivara p : KorisnikService.getInstance().getSvePivare()) {
            if (p.getNaziv().equals(naziv)) return p;
        }
        return null;
    }
    
    
    //UI Osvezavanje
    public void postaviSelektovaniObjekat() {
        Pivara selektovanaPivara = KorisnikService.getInstance().getSelektovanaPivara();
        Pivo selektovanoPivo = KorisnikService.getInstance().getSelektovanoPivo();

        if (selektovanaPivara != null) {
            jComboBoxPivara.setSelectedItem(selektovanaPivara.getNaziv());

            ArrayList<Pivo> piva = KorisnikService.getInstance().getPivaZaPivaru(selektovanaPivara);
            jComboBoxPivo.removeAllItems();

            if (piva.isEmpty()) {
                resetujUIZaNepostojecaPiva();
                return;
            }

            for (Pivo p : piva) {
                jComboBoxPivo.addItem(p.getNaziv());
            }
        }

        if (selektovanoPivo != null) {
            jComboBoxPivo.setSelectedItem(selektovanoPivo.getNaziv());
            prikaziDetaljePiva(selektovanoPivo);
        } else {
            resetujUIZaNepostojecaPiva();
            jButtonDodajUOmiljeno.setText("Dodaj u omiljene");
        }
    }



    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonDodajRecenziju;
    private javax.swing.JButton jButtonDodajUOmiljeno;
    private javax.swing.JButton jButtonUkloniRecenziju;
    private javax.swing.JComboBox<String> jComboBoxPivara;
    private javax.swing.JComboBox<String> jComboBoxPivo;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JLabel jLabelCenaPiva;
    private javax.swing.JLabel jLabelImeKorisnikaPlaceholder;
    private javax.swing.JLabel jLabelNazivPiva;
    private javax.swing.JLabel jLabelOcenaKorisnikaPlaceholder;
    private javax.swing.JLabel jLabelOcenaPiva;
    private javax.swing.JLabel jLabelOpisPiva;
    private javax.swing.JLabel jLabelRecenzijaKorisnikaPlaceholder;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTableZaposleniNaPoslu;
    // End of variables declaration//GEN-END:variables

}