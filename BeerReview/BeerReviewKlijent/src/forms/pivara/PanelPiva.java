/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package forms.pivara;
import domain.Pivo;
import java.util.ArrayList;
import java.util.List;

/**
 *
 * @author milos
 */
public class PanelPiva extends javax.swing.JPanel {
    private boolean izmenaUToku = false;
    private Pivo originalPivo = null;
    /**
     * Creates new form PanelPiva
     */
    public PanelPiva() {
        initComponents();
        inicijalizacija();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel3 = new javax.swing.JLabel();
        jComboBoxPivo = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabelProsecnaOcena = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTableZaposleniNaPoslu = new javax.swing.JTable();
        jLabel10 = new javax.swing.JLabel();
        jLabelImeKorisnikaPlaceHolder = new javax.swing.JLabel();
        jLabelOcenaKorisnikaPlaceholder = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabelRecenzijaKorisnikaPlaceHolder = new javax.swing.JLabel();
        jButtonDodajPivo = new javax.swing.JButton();
        jButtonIzmeniPivo = new javax.swing.JButton();
        jButtonIzbrisiPivo = new javax.swing.JButton();
        jTextFieldCenaPiva = new javax.swing.JTextField();
        jTextFieldNazivPiva = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextAreaOpisPiva = new javax.swing.JTextArea();

        jLabel3.setText("Pivo: ");

        jComboBoxPivo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jLabel1.setText("Naziv Piva: ");

        jLabel5.setText("Cena Piva: ");

        jLabel6.setText("Opis Piva: ");

        jLabel7.setText("Prosecna ocena: ");

        jLabelProsecnaOcena.setText("0");

        jLabel9.setText("Recenzije: ");

        jTableZaposleniNaPoslu.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane2.setViewportView(jTableZaposleniNaPoslu);

        jLabel10.setText("Korisnik: ");

        jLabelImeKorisnikaPlaceHolder.setText("Ime Korisnika");

        jLabelOcenaKorisnikaPlaceholder.setText("Ocena Korisnika");

        jLabel11.setText("Ocena: ");

        jLabelRecenzijaKorisnikaPlaceHolder.setText("Recenzija korisnika...");
        jLabelRecenzijaKorisnikaPlaceHolder.setVerticalAlignment(javax.swing.SwingConstants.TOP);

        jButtonDodajPivo.setText("Dodaj Pivo");
        jButtonDodajPivo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonDodajPivoActionPerformed(evt);
            }
        });

        jButtonIzmeniPivo.setText("Izmeni Pivo");
        jButtonIzmeniPivo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonIzmeniPivoActionPerformed(evt);
            }
        });

        jButtonIzbrisiPivo.setText("Izbrisi Pivo");
        jButtonIzbrisiPivo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonIzbrisiPivoActionPerformed(evt);
            }
        });

        jTextAreaOpisPiva.setColumns(20);
        jTextAreaOpisPiva.setRows(5);
        jScrollPane1.setViewportView(jTextAreaOpisPiva);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jLabelRecenzijaKorisnikaPlaceHolder, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 191, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(layout.createSequentialGroup()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel11)
                                .addComponent(jLabel10))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabelImeKorisnikaPlaceHolder)
                                .addComponent(jLabelOcenaKorisnikaPlaceholder)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jButtonDodajPivo, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel7)
                                .addGap(18, 18, 18)
                                .addComponent(jLabelProsecnaOcena, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGap(18, 18, 18)
                                .addComponent(jButtonIzbrisiPivo)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButtonIzmeniPivo))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                        .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                    .addComponent(jLabel3))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jComboBoxPivo, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jTextFieldNazivPiva)
                                    .addComponent(jTextFieldCenaPiva)
                                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 345, Short.MAX_VALUE))))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jButtonDodajPivo)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(jTextFieldNazivPiva, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(jTextFieldCenaPiva, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jComboBoxPivo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel6)
                        .addGap(0, 55, Short.MAX_VALUE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(jLabelProsecnaOcena)
                    .addComponent(jButtonIzmeniPivo)
                    .addComponent(jButtonIzbrisiPivo))
                .addGap(18, 18, 18)
                .addComponent(jLabel9)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(jLabelImeKorisnikaPlaceHolder))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11)
                    .addComponent(jLabelOcenaKorisnikaPlaceholder))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabelRecenzijaKorisnikaPlaceHolder, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(64, 64, 64))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonDodajPivoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonDodajPivoActionPerformed
        java.awt.Window parent = javax.swing.SwingUtilities.getWindowAncestor(this);
        if (parent instanceof java.awt.Frame) {
            DodajPivoForm dialog = new DodajPivoForm((java.awt.Frame) parent, true, this);
            dialog.setLocationRelativeTo(this);
            dialog.setVisible(true);
        } else {
            System.out.println("Parent nije Frame");
        }
    }//GEN-LAST:event_jButtonDodajPivoActionPerformed

    private void jButtonIzmeniPivoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonIzmeniPivoActionPerformed
        if (!izmenaUToku) {
            // Pokreni mod izmene
            izmenaUToku = true;
            setEditable(true);
            jButtonIzmeniPivo.setText("Sačuvaj");
            jButtonIzbrisiPivo.setText("Odustani");
        } else {
            // Klik na "Sačuvaj"
            try {
                String noviNaziv = jTextFieldNazivPiva.getText().trim();
                String noviOpis = jTextAreaOpisPiva.getText().trim();
                Double novaCena = Double.parseDouble(jTextFieldCenaPiva.getText().trim());

                Pivo p = service.PivaraService.getInstance().getSelektovanoPivo();
                Pivo updated = new Pivo(
                    p.getPivoID(),
                    p.getPivara(),
                    noviNaziv,
                    noviOpis,
                    novaCena,
                    p.getDatumDodavanja()
                );

                service.PivaraService.getInstance().updatePivo(updated);
                ucitajPiva(); // sve ponovo učitava i prikazuje novo selektovano

                javax.swing.JOptionPane.showMessageDialog(this, "Pivo je uspešno izmenjeno.");
            } catch (NumberFormatException e) {
                javax.swing.JOptionPane.showMessageDialog(this, "Cena mora biti broj.");
            } catch (Exception ex) {
                javax.swing.JOptionPane.showMessageDialog(this, "Greška pri ažuriranju: " + ex.getMessage());
            }
        }
    }//GEN-LAST:event_jButtonIzmeniPivoActionPerformed

    private void jButtonIzbrisiPivoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonIzbrisiPivoActionPerformed
        if (izmenaUToku) {
        // Odustani od izmene
        prikaziDetaljePiva(originalPivo);
        } else {
            // Brisanje piva
            int confirm = javax.swing.JOptionPane.showConfirmDialog(
                this,
                "Da li ste sigurni da želite da obrišete ovo pivo?",
                "Potvrda brisanja",
                javax.swing.JOptionPane.YES_NO_OPTION
            );

            if (confirm == javax.swing.JOptionPane.YES_OPTION) {
                try {
                    Pivo selektovano = service.PivaraService.getInstance().getSelektovanoPivo();
                    service.PivaraService.getInstance().deletePivo(selektovano);
                    javax.swing.JOptionPane.showMessageDialog(this, "Pivo je uspešno obrisano.");
                    ucitajPiva();
                } catch (Exception ex) {
                    javax.swing.JOptionPane.showMessageDialog(this, "Greška pri brisanju piva: " + ex.getMessage());
                }
            }
        }
    }//GEN-LAST:event_jButtonIzbrisiPivoActionPerformed

    public void inicijalizacija(){
        jTableZaposleniNaPoslu.getSelectionModel().addListSelectionListener(e -> {
        if (!e.getValueIsAdjusting()) {
                int selectedRow = jTableZaposleniNaPoslu.getSelectedRow();
                if (selectedRow >= 0) {
                    models.TableModelRecenzije model = (models.TableModelRecenzije) jTableZaposleniNaPoslu.getModel();
                    domain.Recenzija r = model.getRecenzijaAt(selectedRow);
                    domain.Korisnik korisnik = service.PivaraService.getInstance().getKorisnikById(r.getKorisnikID());

                    jLabelImeKorisnikaPlaceHolder.setText(korisnik != null ? korisnik.getIme() + " " + korisnik.getPrezime() : "Nepoznat korisnik");
                    jLabelOcenaKorisnikaPlaceholder.setText(String.valueOf(r.getOcena()));
                    jLabelRecenzijaKorisnikaPlaceHolder.setText(r.getSadrzaj());
                }
            }
        });

        try {
            service.PivaraService.getInstance().ucitajSveRecenzije();
            service.PivaraService.getInstance().ucitajSveKorisnike();
        } catch (Exception ex) {
            javax.swing.JOptionPane.showMessageDialog(this, "Greška pri učitavanju recenzija i korisnika: " + ex.getMessage());
        }

        ucitajPiva();
        setEditable(false);

        jComboBoxPivo.addActionListener(evt -> prikaziDetaljeSelektovanogPiva());
    }
    
    public void ucitajPiva() {
        try {
            // Zapamti ID trenutno selektovanog piva (ako postoji)
            Pivo trenutnoSelektovano = service.PivaraService.getInstance().getSelektovanoPivo();
            Long selektovaniId = trenutnoSelektovano != null ? trenutnoSelektovano.getPivoID() : null;

            service.PivaraService.getInstance().refreshAllPiva();
            List<Pivo> piva = service.PivaraService.getInstance().getAllPiva();

            jComboBoxPivo.removeAllItems();

            int selektovaniIndex = -1;
            for (int i = 0; i < piva.size(); i++) {
                Pivo p = piva.get(i);
                jComboBoxPivo.addItem(p.getNaziv());

                if (selektovaniId != null && selektovaniId.equals(p.getPivoID())) {
                    selektovaniIndex = i;
                }
            }

            if (!piva.isEmpty()) {
                if (selektovaniIndex != -1) {
                    jComboBoxPivo.setSelectedIndex(selektovaniIndex);
                    service.PivaraService.getInstance().setSelektovanoPivo(piva.get(selektovaniIndex));
                    prikaziDetaljePiva(piva.get(selektovaniIndex));
                } else {
                    // fallback: selektuj poslednji
                    int lastIndex = piva.size() - 1;
                    jComboBoxPivo.setSelectedIndex(lastIndex);
                    service.PivaraService.getInstance().setSelektovanoPivo(piva.get(lastIndex));
                    prikaziDetaljePiva(piva.get(lastIndex));
                }
            }

        } catch (Exception ex) {
            javax.swing.JOptionPane.showMessageDialog(this, "Greška pri učitavanju piva: " + ex.getMessage());
        }
    }
    
    private void prikaziRecenzijeIPodaci(Pivo pivo) {
    // Učitaj recenzije za pivo
        ArrayList<domain.Recenzija> recenzije = service.PivaraService.getInstance().getRecenzijeZaSelektovanoPivo();

        // Postavi model tabele
        models.TableModelRecenzije tableModel = new models.TableModelRecenzije(recenzije);
        jTableZaposleniNaPoslu.setModel(tableModel);

        // Postavi prosečnu ocenu
        String prosecnaOcena = service.PivaraService.getInstance().getProsecnaOcenaZaSelektovanoPivo();
        jLabelProsecnaOcena.setText(prosecnaOcena.equals("/") ? "Nema ocena" : prosecnaOcena);

        // Ako ima recenzija, prikaži ime korisnika, ocenu i recenziju prve recenzije
        if (!recenzije.isEmpty()) {
            domain.Recenzija prva = recenzije.get(0);
            domain.Korisnik korisnik = service.PivaraService.getInstance().getKorisnikById(prva.getKorisnikID());

            jLabelImeKorisnikaPlaceHolder.setText(korisnik != null ? korisnik.getIme() + " " + korisnik.getPrezime() : "Nepoznat korisnik");
            jLabelOcenaKorisnikaPlaceholder.setText(String.valueOf(prva.getOcena()));
            jLabelRecenzijaKorisnikaPlaceHolder.setText(prva.getSadrzaj());
        } else {
            jLabelImeKorisnikaPlaceHolder.setText("-");
            jLabelOcenaKorisnikaPlaceholder.setText("-");
            jLabelRecenzijaKorisnikaPlaceHolder.setText("Nema recenzija");
        }
    }


    private void prikaziDetaljeSelektovanogPiva() {
        int selectedIndex = jComboBoxPivo.getSelectedIndex();
        if (selectedIndex >= 0) {
            domain.Pivo selektovano = service.PivaraService.getInstance().getAllPiva().get(selectedIndex);
            service.PivaraService.getInstance().setSelektovanoPivo(selektovano);
            prikaziDetaljePiva(selektovano);
        }
    }

    private void prikaziDetaljePiva(domain.Pivo pivo) {
        originalPivo = pivo;

        jTextFieldNazivPiva.setText(pivo.getNaziv());
        jTextFieldCenaPiva.setText(pivo.getCena().toString());
        jTextAreaOpisPiva.setText(pivo.getOpis());

        setEditable(false);
        jButtonIzmeniPivo.setText("Izmeni");
        jButtonIzbrisiPivo.setText("Obriši");
        izmenaUToku = false;

        // Prikaži recenzije i dodatne podatke
        prikaziRecenzijeIPodaci(pivo);
    }
    
    private void setEditable(boolean editable) {
        jTextFieldNazivPiva.setEnabled(editable);
        jTextFieldCenaPiva.setEnabled(editable);
        jTextAreaOpisPiva.setEnabled(editable);
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonDodajPivo;
    private javax.swing.JButton jButtonIzbrisiPivo;
    private javax.swing.JButton jButtonIzmeniPivo;
    private javax.swing.JComboBox<String> jComboBoxPivo;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JLabel jLabelImeKorisnikaPlaceHolder;
    private javax.swing.JLabel jLabelOcenaKorisnikaPlaceholder;
    private javax.swing.JLabel jLabelProsecnaOcena;
    private javax.swing.JLabel jLabelRecenzijaKorisnikaPlaceHolder;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTableZaposleniNaPoslu;
    private javax.swing.JTextArea jTextAreaOpisPiva;
    private javax.swing.JTextField jTextFieldCenaPiva;
    private javax.swing.JTextField jTextFieldNazivPiva;
    // End of variables declaration//GEN-END:variables
}
